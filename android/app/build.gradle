plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def kotlin_version = '1.5.31' // Define the Kotlin version here

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions += "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
        applicationId "com.example.mechanic.app.dev.kr"
            resValue "string", "app_name", "Mechanic KR Dev"
        }
        staging {
            dimension "flavor-type"
            applicationId "com.example.mechanic.app.staging"
            resValue "string", "app_name", "Mechanic Staging"
        }
        prod {
            dimension "flavor-type"
            applicationId "com.example.mechanic.app.prod"
            resValue "string", "app_name", "Mechanic Prod"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

   namespace "com.example.mechanic.app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.mechanic.app"
        minSdkVersion  23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs{
        debug {
            keyAlias 'androiddebugkey'
            storeFile file('mykey.jks')
            keyPassword 'android'
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            manifestPlaceholders = [usesCleartextTraffic:"true"] 
        }
        // release {
            // signingConfig signingConfigs.debug
            // manifestPlaceholders = [usesCleartextTraffic:"false"]
        // }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

